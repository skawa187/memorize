# syntax=docker/dockerfile:1

FROM python:3.11.4-alpine as base
LABEL version="1.0"
LABEL mantainer="skawa@dev.memorize.com" 

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ARG APP_USER
ARG DJANGO_WORKDIR
ARG STATIC_DIR
ARG MEDIA_DIR

### BUILD STAGE ###

FROM base as builder
WORKDIR /build
# Build pip wheels
RUN pip install --upgrade pip --quiet
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --wheel-dir ./pip-wheels -r requirements.txt

### FINAL STAGE ###

FROM base as final
# Set up the user
WORKDIR ${DJANGO_WORKDIR}
RUN addgroup -S -g 101 ${APP_USER} && adduser -S -u 100 -G ${APP_USER} ${APP_USER}

# Prepare static directory
RUN install -d -o ${APP_USER} -g ${APP_USER} ${STATIC_DIR} ${MEDIA_DIR}

# Install Rsync
RUN apk --no-cache add rsync

# Install pip packages
COPY --from=builder /build/pip-wheels /pip-wheels
COPY --from=builder /build/requirements.txt .
RUN pip install --upgrade pip --quiet && pip install --no-cache /pip-wheels/*

# Copy app files
COPY --chown=${APP_USER}:${APP_USER} . ${DJANGO_WORKDIR}

# Link secrets to the app dir
RUN ln -s /run/secrets/django_key ./django_key && ln -s /run/secrets/db_pass ./db_pass

# Set the non-root user
USER ${APP_USER}

ENTRYPOINT [ "./entrypoint.sh" ]